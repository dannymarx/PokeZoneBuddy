name: Release on VERSION change

on:
  push:
    branches: [ main ]
    paths: [ "VERSION" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-release:
    runs-on: macos-26
    env:
      PROJECT: PokeZoneBuddy.xcodeproj
      SCHEME: PokeZoneBuddy
      BUILD_DIR: build
      TAG_PREFIX: v

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read version
        id: v
        run: |
          VER="$(tr -d ' \n\r' < VERSION)"
          echo "version=$VER" >> "$GITHUB_OUTPUT"

      - name: Build .app (Release, unsigned)
        run: |
          mkdir -p "$BUILD_DIR"
          xcodebuild \
            -project "$PROJECT" \
            -scheme "$SCHEME" \
            -configuration Release \
            -destination "platform=macOS" \
            -derivedDataPath "$BUILD_DIR" \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            STRINGS_FILE_OUTPUT_ENCODING=UTF-8 \
            build

      - name: Locate .app
        id: app
        run: |
          APP_PATH="$BUILD_DIR/Build/Products/Release/${SCHEME}.app"
          test -d "$APP_PATH" || APP_PATH="$(/usr/bin/find "$BUILD_DIR/Build/Products/Release" -maxdepth 1 -name '*.app' -print -quit)"
          test -n "$APP_PATH"
          echo "path=$APP_PATH" >> "$GITHUB_OUTPUT"

      - name: Install create-dmg
        run: |
          brew update
          brew install create-dmg

      - name: Create DMG
        id: dmg
        run: |
          DMG_NAME="${SCHEME}-${{ steps.v.outputs.version }}.dmg"
          create-dmg --overwrite --volname "${SCHEME} ${{ steps.v.outputs.version }}" \
            "$DMG_NAME" "${{ steps.app.outputs.path }}"
          echo "name=$DMG_NAME" >> "$GITHUB_OUTPUT"
          echo "path=$DMG_NAME" >> "$GITHUB_OUTPUT"

      - name: Create tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "${TAG_PREFIX}${{ steps.v.outputs.version }}" -m "Release ${{ steps.v.outputs.version }}"
          git push origin "${TAG_PREFIX}${{ steps.v.outputs.version }}"

      - name: Create GitHub Release and upload DMG
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_PREFIX }}${{ steps.v.outputs.version }}
          name: PokeZoneBuddy ${{ steps.v.outputs.version }}
          draft: false
          prerelease: false
          files: ${{ steps.dmg.outputs.path }}

      - name: Write docs/version.json
        run: |
          OWNER_REPO="$GITHUB_REPOSITORY"
          ASSET_URL="https://github.com/${OWNER_REPO}/releases/download/${{ env.TAG_PREFIX }}${{ steps.v.outputs.version }}/${{ steps.dmg.outputs.name }}"
          DATE_ISO=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          mkdir -p docs
          cat > docs/version.json <<JSON
          {
            "version": "${{ steps.v.outputs.version }}",
            "date": "${DATE_ISO}",
            "platform": "macOS",
            "asset": "${ASSET_URL}",
            "signed": false
          }
          JSON

      - name: Commit docs/version.json to main
        run: |
          git pull --ff-only
          git add docs/version.json
          git commit -m "docs: version.json for ${{ steps.v.outputs.version }}" || echo "No changes"
          git push origin HEAD:main
